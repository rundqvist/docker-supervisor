#!/bin/sh

VAR_PATH="/.registry/var/"

if [ "$1" = "--set-env" ] ; then 

    mkdir -p $VAR_PATH
    printenv | while read line; do
        var=$(echo "$line" | sed 's/\(.*\)=\(.*\)$/\1/g')
        val=$(echo "$line" | sed 's/\(.*\)=\(.*\)$/\2/g')
        echo "$val" > $VAR_PATH$var
    done
    exit 0;
fi

while getopts ":g:s:d:a:e:k:v:c:" arg; do
  case $arg in
    k) KEY=$OPTARG;;
    v) VALUE=$OPTARG;;
    *) ACTION=$arg; NAME=$OPTARG;;
  esac
done

if [ -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 1 ] ; then ACTION="g"; NAME=$1; fi
if [ -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 2 ] ; then ACTION="s"; NAME=$1; VALUE=$2; fi
if [ -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 3 ] && ( [ "$2" = "+" ] || [ "$2" = "-" ] ) ; then ACTION=$2; NAME=$1; VALUE=$3; fi

if [ ! -z $KEY ] ; then VAR_PATH="$VAR_PATH.$KEY/"; fi;
if [ ! -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 2 ] ; then ACTION="l"; NAME=$2; fi
if [ ! -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 3 ] ; then ACTION="g"; NAME=$3; fi
if [ ! -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 4 ] ; then ACTION="s"; NAME=$3; VALUE=$4; fi
if [ ! -z $KEY ] && [ -z "$ACTION" ] && [ $# -eq 5 ] && ( [ "$4" = "+" ] || [ "$4" = "-" ] ) ; then ACTION=$4; NAME=$3; VALUE=$5; fi

mkdir -p $VAR_PATH

if [ -z "$ACTION" ] || [ -z "$NAME" ] ; then
    echo "Syntax error in var."
    log -e supervisor "Syntax error in var."
    exit 1;
fi

case $ACTION in

    a) # append
        if [ ! "$(cat $VAR_PATH$NAME 2>/dev/null | grep "^$VALUE$")" ]; then
            echo $VALUE >> $VAR_PATH$NAME
        fi
    ;;
    c) # count (rows)
        echo $(cat $VAR_PATH$NAME 2>/dev/null | wc -l)
    ;;
    d) # delete
        rm -f $VAR_PATH$NAME >/dev/null
    ;;
    e) # exists
        test -f $VAR_PATH$NAME
    ;;
    g) # get
        cat $VAR_PATH$NAME 2>/dev/null
    ;;
    l) # list (keys only)
        ls $VAR_PATH | tr ' ' '\n'
    ;;
    s) # set
        echo $VALUE > $VAR_PATH$NAME
    ;;
    +|-) # math
        val=$(cat $VAR_PATH$NAME 2>/dev/null)
        if [ -z "$val" ] ; then
            val=0
        fi
        
        echo $(expr $val $ACTION $VALUE) > $VAR_PATH$NAME
    ;;

esac

exit $?
